[build-system]
requires = ["hatchling >= 1.27.0, < 2.0.0"]
build-backend = "hatchling.build"

[project]
name = "NiveshPy"
description = "A simple python library for all your investment needs."
version = "0.1.0"
dependencies = [
    "polars >= 1.29.0, < 2.0.0",
    "scipy >= 1.13.1, < 2.0.0",
    "numpy >= 2.0.2, < 3.0.0",
    "platformdirs >= 4.3.8, < 5.0.0",
    "pandas >= 2.2.2, < 3.0.0",
    "pyarrow >= 20.0.0, < 21.0.0",
]
requires-python = ">=3.9"
authors = [
    { name = "Yashovardhan Dhanania", email = "yashovardhandhanania@gmail.com" },
]
maintainers = [
    { name = "Yashovardhan Dhanania", email = "yashovardhandhanania@gmail.com" },
]
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
keywords = ["finance", "mutual funds", "investment"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.urls]
Homepage = "http://github.com/yashovardhan99/niveshpy"
# Documentation = "https://readthedocs.org"
Repository = "https://github.com/yashovardhan99/niveshpy.git"
Issues = "http://github.com/yashovardhan99/niveshpy/issues"
Changelog = "http://github.com/yashovardhan99/niveshpy/blob/master/CHANGELOG.md"
funding = "https://github.com/yashovardhan99/niveshpy"
releasenotes = "https://github.com/yashovardhan99/niveshpy/releases"

[dependency-groups]
testing = ["pytest >= 8.3.5, < 9.0.0", "coverage[toml] >= 7.8.0, < 8.0.0"]
linting = ["ruff >= 0.11.9, < 0.12.0", "mypy >= 1.15.0, < 2.0.0"]
stubs = ["pandas-stubs >= 2.2.2, < 3.0.0"]
dev = [
    { include-group = "testing" },
    { include-group = "linting" },
    { include-group = "stubs" },
]

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "D",  # Docstrings
    "B",  # Bugbear
    "Q",  # Quotes
    "UP", # PyUpgrade
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
