name: Testing and Coverage

on:
  push:
    branches: ["main"]
    paths:
      - "niveshpy/**"
      - "tests/**"
      - ".github/workflows/test.yml"
      - "pyproject.toml"
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test and build coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.11", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --group dev
          python -m pip install .

      - name: Run tests with coverage
        run: |
          coverage run -m pytest

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage
          include-hidden-files: true
          if-no-files-found: ignore

  coverage:
    name: Combine and check coverage
    runs-on: ubuntu-latest
    needs: test
    if: always() # Ensure this job runs even if the test job fails
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --group testing
      
      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true
      
      - name: Combine coverage data and generate report
        run: |
          coverage combine # Combine all .coverage files
          coverage report --format=markdown >> $GITHUB_STEP_SUMMARY # Output to GitHub summary
          coverage html --skip-covered --skip-empty --fail-under 90 # Generate HTML report for detailed view
      
      - name: Upload HTML coverage report
        if: always() # Ensure this step runs even if previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: htmlcov
